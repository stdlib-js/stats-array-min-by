{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar dtypes = require( '@stdlib/array-dtypes' );\nvar dtype = require( '@stdlib/array-dtype' );\nvar contains = require( '@stdlib/array-base-assert-contains' );\nvar join = require( '@stdlib/array-base-join' );\nvar strided = require( '@stdlib/stats-base-min-by' ).ndarray;\nvar format = require( '@stdlib/string-format' );\nvar isFunction = require( '@stdlib/assert-is-function' );\n\n\n// VARIABLES //\n\nvar IDTYPES = dtypes( 'real_and_generic' );\nvar GENERIC_DTYPE = 'generic';\n\n\n// MAIN //\n\n/**\n* Computes the minimum value of an array via a callback function.\n*\n* @param {NumericArray} x - input array\n* @param {Callback} clbk - callback\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} first argument must have a supported data type\n* @throws {TypeError} second argument must be a function\n* @returns {number} minimum value\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var v = minBy( x, accessor );\n* // returns -10.0\n*/\nfunction minBy( x, clbk, thisArg ) {\n\tvar dt;\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', x ) );\n\t}\n\tdt = dtype( x ) || GENERIC_DTYPE;\n\tif ( !contains( IDTYPES, dt ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must have one of the following data types: \"%s\". Data type: `%s`.', join( IDTYPES, '\", \"' ), dt ) );\n\t}\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\treturn strided( x.length, x, 1, 0, wrapper );\n\n\t/**\n\t* Invokes a provided callback.\n\t*\n\t* @private\n\t* @param {number} value - current element\n\t* @param {NonNegativeInteger} aidx - current array index\n\t* @param {NonNegativeInteger} sidx - current strided index\n\t* @param {NumericArray} arr - input array\n\t* @returns {number} callback return value\n\t*/\n\tfunction wrapper( value, aidx, sidx, arr ) {\n\t\treturn clbk.call( thisArg, value, aidx, arr );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = minBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the minimum value of an array via a callback function.\n*\n* @module @stdlib/stats-array-min-by\n*\n* @example\n* var minBy = require( '@stdlib/stats-array-min-by' );\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* var v = minBy( x, accessor );\n* // returns -10.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAe,QAAS,8BAA+B,EACvDC,EAAS,QAAS,sBAAuB,EACzCC,EAAQ,QAAS,qBAAsB,EACvCC,EAAW,QAAS,oCAAqC,EACzDC,EAAO,QAAS,yBAA0B,EAC1CC,EAAU,QAAS,2BAA4B,EAAE,QACjDC,EAAS,QAAS,uBAAwB,EAC1CC,EAAa,QAAS,4BAA6B,EAKnDC,EAAUP,EAAQ,kBAAmB,EACrCQ,EAAgB,UA0BpB,SAASC,EAAOC,EAAGC,EAAMC,EAAU,CAClC,IAAIC,EACJ,GAAK,CAACd,EAAcW,CAAE,EACrB,MAAM,IAAI,UAAWL,EAAQ,8EAA+EK,CAAE,CAAE,EAGjH,GADAG,EAAKZ,EAAOS,CAAE,GAAKF,EACd,CAACN,EAAUK,EAASM,CAAG,EAC3B,MAAM,IAAI,UAAWR,EAAQ,qGAAsGF,EAAMI,EAAS,MAAO,EAAGM,CAAG,CAAE,EAElK,GAAK,CAACP,EAAYK,CAAK,EACtB,MAAM,IAAI,UAAWN,EAAQ,qEAAsEM,CAAK,CAAE,EAE3G,OAAOP,EAASM,EAAE,OAAQA,EAAG,EAAG,EAAGI,CAAQ,EAY3C,SAASA,EAASC,EAAOC,EAAMC,EAAMC,EAAM,CAC1C,OAAOP,EAAK,KAAMC,EAASG,EAAOC,EAAME,CAAI,CAC7C,CACD,CAKApB,EAAO,QAAUW,ICrDjB,IAAIU,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isCollection", "dtypes", "dtype", "contains", "join", "strided", "format", "isFunction", "IDTYPES", "GENERIC_DTYPE", "minBy", "x", "clbk", "thisArg", "dt", "wrapper", "value", "aidx", "sidx", "arr", "main"]
}
